apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: monitoring
spec:
  serviceName: "kafka"
  replicas: 2
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - docker-desktop
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            export KAFKA_ADVERTISED_LISTENERS="CLIENT://$(POD_NAME).kafka.monitoring.svc.cluster.local:9092,BROKER://$(POD_NAME).kafka.monitoring.svc.cluster.local:9093";
            exec /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh      
        ports:
        - containerPort: 9092
          name: kafka-0
        - containerPort: 9093
          name: kafka-1
        env:
        - name: KAFKA_BROKER_ID
          valueFrom:
            configMapKeyRef:
              name: kafka-broker-id-config
              key: broker.id
        - name: KAFKA_BROKER_ID_FALLBACK
          value: '$(echo ${POD_NAME} | grep -o "[0-9]*$")'
        - name: KAFKA_BROKER_ID_FINAL
          value: "$(KAFKA_BROKER_ID:-$(KAFKA_BROKER_ID_FALLBACK))"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper.monitoring.svc.cluster.local:2181
        - name: KAFKA_LISTENERS
          value: CLIENT://:9092,BROKER://:9093
        - name: KAFKA_ADVERTISED_LISTENERS
          value: CLIENT://$(POD_NAME).kafka.monitoring.svc.cluster.local:9092,BROKER://$(POD_NAME).kafka.monitoring.svc.cluster.local:9093
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: CLIENT:PLAINTEXT,BROKER:PLAINTEXT
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: BROKER
        volumeMounts:
        - name: kafka-data
          mountPath: /bitnami/kafka/data
        - name: broker-id-config
          mountPath: /etc/kafka/broker-id
          subPath: broker.id
      initContainers:
      - name: generate-broker-id
        image: busybox:latest
        command:
        - sh
        - -c
        - |
          # Extract the numeric part of the pod name (e.g., kafka-0 -> 0)
          BROKER_ID=$(echo $POD_NAME | grep -oE '[0-9]+$')
          echo "$BROKER_ID" > /config/broker.id
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: broker-id-config
          mountPath: /config
      volumes:
      - name: broker-id-config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: hostpath-delayed-binding