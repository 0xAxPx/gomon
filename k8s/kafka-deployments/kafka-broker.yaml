apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: monitoring
spec:
  serviceName: kafka
  replicas: 3
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      hostname: $(POD_NAME)
      subdomain: kafka
      dnsPolicy: ClusterFirst
      initContainers:
        - name: copy-certs
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              NODE_ID=${POD_NAME##*-}
              echo "Copying certs for kafka-$NODE_ID ..."
              cp -r /jks-${NODE_ID}/* /bitnami/kafka/config/certs/
              ls -l /bitnami/kafka/config/certs
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: kafka-certs
              mountPath: /bitnami/kafka/config/certs
            - name: kafka-0-jks
              mountPath: /jks-0
              readOnly: true
            - name: kafka-1-jks
              mountPath: /jks-1
              readOnly: true
            - name: kafka-2-jks
              mountPath: /jks-2
              readOnly: true
      containers:
        - name: kafka
          image: bitnami/kafka:3.7.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /bitnami/kafka/data
              NODE_ID=${POD_NAME##*-}
              export KAFKA_KRAFT_CLUSTER_ID="Gi6UrH-kT4i9NeINp9Sx4w"
              export KAFKA_CFG_NODE_ID=$NODE_ID
              exec /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_KRAFT_CLUSTER_ID
              value: "Gi6UrH-kT4i9NeINp9Sx4w"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "controller,broker"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-0.kafka.monitoring.svc.cluster.local:9094,1@kafka-1.kafka.monitoring.svc.cluster.local:9094,2@kafka-2.kafka.monitoring.svc.cluster.local:9094"
            - name: KAFKA_CFG_LISTENERS
              value: "CONTROLLER://:9094,CLIENT://:9092,BROKER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "CLIENT://$(POD_NAME).kafka.monitoring.svc.cluster.local:9092,BROKER://$(POD_NAME).kafka.monitoring.svc.cluster.local:9093"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,BROKER:SSL"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "BROKER"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_CFG_SSL_CLIENT_AUTH
              value: "required"
            - name: KAFKA_CFG_SSL_KEYSTORE_LOCATION
              value: "/bitnami/kafka/config/certs/kafka.keystore.jks"
            - name: KAFKA_CFG_SSL_TRUSTSTORE_LOCATION
              value: "/bitnami/kafka/config/certs/kafka.truststore.jks"
            - name: KAFKA_CFG_SSL_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-0-tls-jks
                  key: keystore-password
            - name: KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-0-tls-jks
                  key: truststore-password
            - name: KAFKA_CFG_LOG_LEVEL
              value: "DEBUG"
          ports:
            - containerPort: 9092
              name: client
            - containerPort: 9093
              name: broker
            - containerPort: 9094
              name: controller
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka/data
            - name: kafka-certs
              mountPath: /bitnami/kafka/config/certs
              readOnly: true
      volumes:
        - name: kafka-certs
          emptyDir: {}
        - name: kafka-0-jks
          secret:
            secretName: kafka-0-tls-jks
        - name: kafka-1-jks
          secret:
            secretName: kafka-1-tls-jks
        - name: kafka-2-jks
          secret:
            secretName: kafka-2-tls-jks
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        storageClassName: hostpath-delayed-binding
